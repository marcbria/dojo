- name: Run Docker Compose in site's root folder. 
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    hostName: "{{ host }}"
    siteParam: "{{ site }}"
  vars_files:
    - ./configs/dojo.yml
    - ./configs/secret.yml
    - ./sites/base-{{ hostName }}.yml
  tasks:
    # sets "allVars" array from the site's diccionaries as follows:
    #           baseHost > siteGeneric > siteHost > dojoVars.
    - include_tasks: setAllVars.yml

    - name: Check if the site directory exists
      stat:
        path: "{{ allVars.path.base.sites }}/{{ allVars.dojo.id }}"
      register: site_dir_stat

    - name: Fail if site directory does not exist
      fail:
        msg: "Site directory does not exist"
      when: not site_dir_stat.stat.exists

    - name: Runs "docker compose <command>" in the site's directory
      shell:
        cmd: |
          docker compose {{ command }};
          docker compose ps
        chdir: "{{ allVars.path.base.sites }}/{{ allVars.dojo.id }}"
      when: command in ['start', 'stop', 'restart', 'down', 'pull', 'pause', 'ps', 'unpause', 'build']
      register: docker_compose_output

    - name: Runs "docker compose up -d" in the sites's directory
      shell:
        cmd: |
          docker compose up -d;
          docker compose ps
        chdir: "{{ allVars.path.base.sites }}/{{ allVars.dojo.id }}"
      when: command in ['up']
      register: docker_compose_output

    - name: Runs "docker compose stop & up & clears OJS cache" in the sites's directory
      shell:
        cmd: |
          docker compose stop;
          docker compose up -d;
          docker compose ps
        chdir: "{{ allVars.path.base.sites }}/{{ allVars.dojo.id }}"
      when: command in ['clear']
      register: docker_compose_output

    - name: Show the site's status
      debug:
        msg: "{{ docker_compose_output.stdout_lines }}"
      when: docker_compose_output.stdout_lines is defined
