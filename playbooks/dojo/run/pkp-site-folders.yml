---
- name: Create a PKP site folder structure based on site's diccionary vars.
  hosts: all
  become: yes
  gather_facts: no
  vars:
    siteParam: "{{ site }}"
  vars_files:
    - ./configs/dojo.yml
    - ./sites/{{ site }}.yml
  tasks:
    - name: Ensure journal's essential folders exists
      file:
        path: "{{ item }}"
        state: directory
        mode: 0744
        owner: "{{ user.run }}"
        group: "{{ user.group }}"
        force: yes
      loop:
        - "{{ path.base.sites }}/{{ dojo.id }}"
        - "{{ path.storage.backups }}/{{ dojo.id }}"
        - "{{ path.storage.volumes }}/files"

    - name: Create journal's volume folders
      file:
        path: "{{ item.value }}/{{ dojo.id }}"
        state: directory
        mode: 0744
        owner: "{{ user.run }}"
        group: "{{ user.group }}"
        recurse: yes
      with_dict: "{{ path.volumes }}"
      tags:
        - volumes_directories

    - name: Create journal's volume folders for files
      file:
        path: "{{ item.value }}/{{ dojo.id }}"
        state: directory
        mode: 0744
        owner: "{{ user.run }}"
        group: "{{ user.group }}"
        recurse: yes
      with_dict: "{{ path.files }}"
      tags:
        - files_directories

    - name: Assign ownership in BD folder
      file:
        path: "{{ item }}"
        state: directory
        owner: "999"
        group: "1002"
        recurse: yes
      loop:
        - "{{ path.volumes.db }}"
      tags:
        - volumes_db

    - name: Assign ownership in Web files
      file:
        path: "{{ item }}"
        state: directory
        owner: "100"
        group: "101"
        recurse: yes
      loop:
        - "{{ path.files }}"
      tags:
        - volumes_www

    - name: Create required symbolic links
      file:
        src: "{{ item.target }}"
        dest: "{{ item.link }}"
        state: link
      loop: 
        - { link: "{{ path.base.sites }}/{{ dojo.id }}/volumes", target: "{{ path.volumes.all }}/{{ dojo.id }}" }
        - { link: "{{ path.volumes.all }}/{{ dojo.id }}/db", target: "{{ path.volumes.db }}/{{ dojo.id }}" }
        - { link: "{{ path.volumes.all }}/{{ dojo.id }}/logs", target: "{{ path.volumes.logs }}/{{ dojo.id }}" }
        - { link: "{{ path.volumes.all }}/{{ dojo.id }}/config", target: "{{ path.files.config }}/{{ dojo.id }}" }
        - { link: "{{ path.volumes.all }}/{{ dojo.id }}/public", target: "{{ path.files.public }}/{{ dojo.id }}" }
        - { link: "{{ path.volumes.all }}/{{ dojo.id }}/private", target: "{{ path.files.private }}/{{ dojo.id }}" }
